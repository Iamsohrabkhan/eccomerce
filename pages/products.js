import React, { useState } from "react";
import Head from "next/head";
import { useGlobalContext } from "../components/context";
import { BsCheck } from "react-icons/bs";

export async function getServerSideProps() {
  try {
    const res = await fetch("https://api.pujakaitem.com/api/products");
    const data = await res.json();
    return {
      props: {
        data: data || null,
      },
    };
  } catch (error) {
    console.log(`Failed to fetch data ${error}`);
  }
}

const getUniqueData = (data, property) => {
  let newVal = data.map((curEle) => {
    return curEle[property];
  });
  return (newVal = ["all",...new Set(newVal)]);
};
const products = ({ data }) => {
  const [search, setSearch] = useState("");
  const [categoryState, setCategoryState] = useState("all");
  
  const { formatter, toCapitilize } = useGlobalContext();
  let category = getUniqueData(data, "category");
  let colors = getUniqueData(data, "colors").flat();
  colors=[...new Set(colors)]
  const [check, setCheck] = useState(colors[1])
  
//  console.log(check);
  return (
    <>
      <Head>
        <title>Eccomerce | Products</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="bg-white max-w-[80%] mx-auto">
        <div className="mt-3">
          <div className="filtration container mx-auto   flex items-center justify-around">
            <select className="select select-bordered select-sm  max-w-xs select-secondary w-full">
              {/* <option disabled selected>All</option>               */}
              {category.map((curOpt, i) => {
                return <>
                 <option key={i} onClick={(e)=>{setCategoryState(e.target.value.toLowerCase())}} >{toCapitilize(curOpt)}</option>;
                </>
              })}
            </select>
            <div className="colors">
              <ul className="flex space-x-2">
              <li>Colors:</li>

              {
                colors.map((curColor)=>{
                  return <li key={curColor} className="w-5 h-5 rounded-full" style={{backgroundColor:curColor}}
                  onClick={()=>{setCheck(curColor)}}
                  >
                  {check===curColor ?
                  <BsCheck className="text-white"/> :
                  ""

                  }  
                  </li>
                })
              }
              </ul>
            </div>
        
              <div className="">
                <input
                  type="search"
                  placeholder="Serach your product...."
                  value={search}
                  onChange={(e) => {
                    setSearch(e.target.value);
                  }}
                  className="border  border-pink-200 border-t-0 border-r-0 border-l-0 focus:border-pink-400 active:border-pink-900 px-1 py-0.5"
                />
              </div>
         
          </div>
        </div>
        <div className="mx-auto max-w-2xl py-8 px-4 sm:py-16 sm:px-6 lg:max-w-7xl lg:px-8">
          <h2 className="text-2xl font-bold tracking-tight text-gray-900">
            Customers Choice
          </h2>

          <div className="mt-6 grid grid-cols-1 gap-y-10 gap-x-6 sm:grid-cols-2 lg:grid-cols-3 xl:gap-x-8">
            {data
              .filter((n) => {
                return n.name.toLowerCase().includes(search.toLocaleLowerCase());
              })
              .filter((curr)=>{
               let currentCatagory= curr.category;

                return currentCatagory===(categoryState==="all"?currentCatagory:categoryState);
              })
              .map((items) => {
                const { id, image, category, name, price, colors } = items;
                // console.log(category);

                return (
                  <div key={id} className="group relative">
                    <div className="min-h-80 aspect-w-1 aspect-h-1 w-full overflow-hidden rounded-md bg-gray-200 group-hover:opacity-75 lg:aspect-none lg:h-80">
                      <img
                        src={image}
                        alt={id}
                        className="h-full w-full object-cover object-center lg:h-full lg:w-full"
                      />
                    </div>
                    <div className="mt-4 flex justify-between">
                      <div>
                        <h3 className="text-sm text-gray-700">
                          <a href={id}>
                            <span
                              aria-hidden="true"
                              className="absolute inset-0"
                            />
                            {toCapitilize(name)}
                          </a>
                        </h3>
                        <div className="mt-1 text-sm text-gray-500 flex justify-center items-center">
                          <p> Available Colors</p>{" "}
                          <p>
                            {colors.map((val, i) => {
                              return (
                                <button
                                  key={i}
                                  className={`border-2  ml-1 rounded-full w-6 h-6 focus:outline-none opacity-80 hover:opacity-100`}
                                  style={{ backgroundColor: `${val}` }}
                                ></button>
                              );
                            })}
                          </p>
                        </div>
                      </div>
                      <p className="text-sm font-medium text-gray-900">
                        {formatter.format(price)}
                      </p>
                    </div>
                  </div>
                );
              })}
          </div>
        </div>
      </div>
    </>
  );
};

export default products;
